// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cubefs/blobstore/api/mqproxy (interfaces: MsgSender,LbMsgSender)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	mqproxy "github.com/cubefs/blobstore/api/mqproxy"
	gomock "github.com/golang/mock/gomock"
)

// MockMsgSender is a mock of MsgSender interface.
type MockMsgSender struct {
	ctrl     *gomock.Controller
	recorder *MockMsgSenderMockRecorder
}

// MockMsgSenderMockRecorder is the mock recorder for MockMsgSender.
type MockMsgSenderMockRecorder struct {
	mock *MockMsgSender
}

// NewMockMsgSender creates a new mock instance.
func NewMockMsgSender(ctrl *gomock.Controller) *MockMsgSender {
	mock := &MockMsgSender{ctrl: ctrl}
	mock.recorder = &MockMsgSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMsgSender) EXPECT() *MockMsgSenderMockRecorder {
	return m.recorder
}

// SendDeleteMsg mocks base method.
func (m *MockMsgSender) SendDeleteMsg(arg0 context.Context, arg1 string, arg2 *mqproxy.DeleteArgs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendDeleteMsg", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendDeleteMsg indicates an expected call of SendDeleteMsg.
func (mr *MockMsgSenderMockRecorder) SendDeleteMsg(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendDeleteMsg", reflect.TypeOf((*MockMsgSender)(nil).SendDeleteMsg), arg0, arg1, arg2)
}

// SendShardRepairMsg mocks base method.
func (m *MockMsgSender) SendShardRepairMsg(arg0 context.Context, arg1 string, arg2 *mqproxy.ShardRepairArgs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendShardRepairMsg", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendShardRepairMsg indicates an expected call of SendShardRepairMsg.
func (mr *MockMsgSenderMockRecorder) SendShardRepairMsg(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendShardRepairMsg", reflect.TypeOf((*MockMsgSender)(nil).SendShardRepairMsg), arg0, arg1, arg2)
}

// MockLbRpcClient is a mock of LbMsgSender interface.
type MockLbRpcClient struct {
	ctrl     *gomock.Controller
	recorder *MockLbRpcClientMockRecorder
}

// MockLbRpcClientMockRecorder is the mock recorder for MockLbRpcClient.
type MockLbRpcClientMockRecorder struct {
	mock *MockLbRpcClient
}

// NewMockLbRpcClient creates a new mock instance.
func NewMockLbRpcClient(ctrl *gomock.Controller) *MockLbRpcClient {
	mock := &MockLbRpcClient{ctrl: ctrl}
	mock.recorder = &MockLbRpcClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLbRpcClient) EXPECT() *MockLbRpcClientMockRecorder {
	return m.recorder
}

// SendDeleteMsg mocks base method.
func (m *MockLbRpcClient) SendDeleteMsg(arg0 context.Context, arg1 *mqproxy.DeleteArgs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendDeleteMsg", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendDeleteMsg indicates an expected call of SendDeleteMsg.
func (mr *MockLbRpcClientMockRecorder) SendDeleteMsg(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendDeleteMsg", reflect.TypeOf((*MockLbRpcClient)(nil).SendDeleteMsg), arg0, arg1)
}

// SendShardRepairMsg mocks base method.
func (m *MockLbRpcClient) SendShardRepairMsg(arg0 context.Context, arg1 *mqproxy.ShardRepairArgs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendShardRepairMsg", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendShardRepairMsg indicates an expected call of SendShardRepairMsg.
func (mr *MockLbRpcClientMockRecorder) SendShardRepairMsg(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendShardRepairMsg", reflect.TypeOf((*MockLbRpcClient)(nil).SendShardRepairMsg), arg0, arg1)
}
